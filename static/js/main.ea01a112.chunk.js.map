{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","classNames","TodoList","todos","map","userId","usersFromServer","find","App","useState","selectedUser","setSelectedUser","setTitle","titleError","setTittleError","userError","setUserError","action","method","onSubmit","event","preventDefault","foundedUser","uniqueId","Math","max","titleLength","trim","length","push","addNewTODO","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ea01a112.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\n\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const { title, completed, user } = todo;\n\n  return (\n    <article className={classNames(\n      'TodoInfo',\n      {\n        'TodoInfo--completed': completed,\n      },\n    )}\n    >\n      Resolve conversation\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos\n      .map(todo => <TodoInfo key={todo.id} todo={todo} />)}\n  </section>\n);\n","import './App.scss';\nimport React, { useState } from 'react';\n\nimport todosFromServer from './api/todos';\nimport usersFromServer from './api/users';\n\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nimport { TodoList } from './components/TodoList';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App = () => {\n  const [selectedUser, setSelectedUser] = useState(0);\n  const [title, setTitle] = useState('');\n  const [titleError, setTittleError] = useState(false);\n  const [userError, setUserError] = useState(false);\n\n  const addNewTODO = (id: number) => {\n    const foundedUser = usersFromServer.find(user => user.id === id);\n    const uniqueId = Math.max(...todos.map(todo => todo.id)) + 1;\n    const titleLength = title.trim().length;\n\n    if (titleLength === 0) {\n      setTittleError(true);\n    }\n\n    if (!selectedUser) {\n      setUserError(true);\n    }\n\n    if (foundedUser && titleLength > 0) {\n      todos.push({\n        id: uniqueId,\n        userId: id,\n        title,\n        completed: false,\n        user: foundedUser,\n      });\n\n      setTitle('');\n      setSelectedUser(0);\n    }\n  };\n\n  const handleChangeTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setTittleError(false);\n  };\n\n  const handleChangeSelectedUser\n    = (event: React.ChangeEvent<HTMLSelectElement>) => {\n      setSelectedUser(+event.target.value);\n      setUserError(false);\n    };\n\n  const handleSubmitionForm = (event: React.ChangeEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    addNewTODO(selectedUser);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmitionForm}\n      >\n        <div className=\"field\">\n          <label>\n            {'Title: '}\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              value={title}\n              onChange={handleChangeTitle}\n            />\n          </label>\n\n          {titleError && (<span className=\"error\">Please enter a title</span>)}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            {'User: '}\n            <select\n              data-cy=\"userSelect\"\n              value={selectedUser}\n              onChange={handleChangeSelectedUser}\n            >\n              <option value=\"0\" disabled>Choose a user</option>\n              {usersFromServer.map(user => {\n                const { id, name } = user;\n\n                return (\n                  <option value={id} key={id}>{name}</option>\n                );\n              })}\n            </select>\n\n            {userError && <span className=\"error\">Please choose a user</span>}\n          </label>\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <section className=\"TodoList\">\n        <TodoList todos={todos} />\n      </section>\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}